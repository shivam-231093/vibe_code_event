{
  "version": 3,
  "sources": ["../../flip-card-wc/src/FlipCard.ts"],
  "sourcesContent": ["import style from \"./style.css\";\nimport template from \"./template.html\";\n\nconst flipCardTemplate = document.createElement(\"template\");\n\nflipCardTemplate.innerHTML = `\n<style>${style}</style>\n${template}\n`\nclass FlipCard extends HTMLElement {\n  private _shadowRoot: ShadowRoot;\n\n  [key: string]: any;\n\n  constructor() {\n    super();\n\n    this._shadowRoot = this.attachShadow({ mode: \"open\" });\n\n    this._shadowRoot.appendChild(flipCardTemplate.content.cloneNode(true)); \n  }\n\n  connectedCallback() {\n    if (!this.hasAttribute(\"variant\")) {\n      this.variant = \"hover\";\n    }\n    this.attachEventListeners();\n    this._upgradeProperty('variant');\n  }\n\n  _upgradeProperty(prop: string) {\n  if (this.hasOwnProperty(prop)) {\n    let value = this[prop];\n    delete this[prop];\n    this[prop] = value;\n  }\n}\n\n  static get observedAttributes() {\n    return ['variant'];\n  }\n\n  attributeChangedCallback(attrName: string, oldVal: string, newVal: string) {\n    if (oldVal !== newVal) {\n      this.attachEventListeners();\n    }\n  }\n\n  get variant() {\n    return this.getAttribute(\"variant\")\n  }\n\n  set variant(newValue) {\n    if (newValue) {\n      this.setAttribute(\"variant\", newValue);\n    } \n  }\n\n  attachEventListeners() {\n    const cardFront = this._shadowRoot.querySelector<HTMLElement>(\".flip-card__side--front\");\n    \n\n    const cardBack = this._shadowRoot.querySelector<HTMLElement>(\".flip-card__side--back\");\n    \n    if (this.variant === \"click\") {\n\n      if (cardFront) {\n        cardFront.style.cursor = \"pointer\";\n      }\n\n\n      if (cardBack) {\n        cardBack.style.cursor = \"pointer\";\n      }\n\n      cardFront?.classList.remove(\"hover\");\n      \n      cardBack?.classList.remove(\"hover\");\n      cardFront?.addEventListener('click', function(event) {\n        cardFront?.classList.add(\"clicked--front\");\n         cardBack?.classList.add(\"clicked--back\");\n      })\n\n      cardBack?.addEventListener('click', function(event) {\n        cardFront?.classList.remove(\"clicked--front\");\n\n       \n        cardBack?.classList.remove(\"clicked--back\");\n\n      })\n    }\n\n    if (this.variant === \"hover\") {\n      cardFront?.classList.add(\"hover\");\n      cardFront?.classList.remove(\"clicked--front\")\n      cardBack?.classList.add('hover');\n      cardBack?.classList.remove('clicked--back');\n    }\n  } \n}\n\nwindow.customElements.define(\"flip-card\", FlipCard);\n\ndeclare global {\n  namespace JSX {\n    interface IntrinsicElements {\n      \"flip-card\": any;\n    }\n  }\n}"],
  "mappings": ";;;AAGA,IAAM,mBAAmB,SAAS,cAAc,UAAU;AAE1D,iBAAiB,YAAY;SACpBA,QAAK;EACZ,QAAQ;;AAEV,IAAM,WAAN,cAAuB,YAAW;EAKhC,cAAA;AACE,UAAK;AAEL,SAAK,cAAc,KAAK,aAAa,EAAE,MAAM,OAAM,CAAE;AAErD,SAAK,YAAY,YAAY,iBAAiB,QAAQ,UAAU,IAAI,CAAC;;EAGvE,oBAAiB;AACf,QAAI,CAAC,KAAK,aAAa,SAAS,GAAG;AACjC,WAAK,UAAU;;AAEjB,SAAK,qBAAoB;AACzB,SAAK,iBAAiB,SAAS;;EAGjC,iBAAiB,MAAY;AAC7B,QAAI,KAAK,eAAe,IAAI,GAAG;AAC7B,UAAI,QAAQ,KAAK,IAAI;AACrB,aAAO,KAAK,IAAI;AAChB,WAAK,IAAI,IAAI;;;EAIf,WAAW,qBAAkB;AAC3B,WAAO,CAAC,SAAS;;EAGnB,yBAAyB,UAAkB,QAAgB,QAAc;AACvE,QAAI,WAAW,QAAQ;AACrB,WAAK,qBAAoB;;;EAI7B,IAAI,UAAO;AACT,WAAO,KAAK,aAAa,SAAS;;EAGpC,IAAI,QAAQ,UAAQ;AAClB,QAAI,UAAU;AACZ,WAAK,aAAa,WAAW,QAAQ;;;EAIzC,uBAAoB;AAClB,UAAM,YAAY,KAAK,YAAY,cAA2B,yBAAyB;AAGvF,UAAM,WAAW,KAAK,YAAY,cAA2B,wBAAwB;AAErF,QAAI,KAAK,YAAY,SAAS;AAE5B,UAAI,WAAW;AACb,kBAAU,MAAM,SAAS;;AAI3B,UAAI,UAAU;AACZ,iBAAS,MAAM,SAAS;;AAG1B,oBAAS,QAAT,cAAS,SAAA,SAAT,UAAW,UAAU,OAAO,OAAO;AAEnC,mBAAQ,QAAR,aAAQ,SAAA,SAAR,SAAU,UAAU,OAAO,OAAO;AAClC,oBAAS,QAAT,cAAS,SAAA,SAAT,UAAW,iBAAiB,SAAS,SAAS,OAAK;AACjD,sBAAS,QAAT,cAAS,SAAA,SAAT,UAAW,UAAU,IAAI,gBAAgB;AACxC,qBAAQ,QAAR,aAAQ,SAAA,SAAR,SAAU,UAAU,IAAI,eAAe;OACzC;AAED,mBAAQ,QAAR,aAAQ,SAAA,SAAR,SAAU,iBAAiB,SAAS,SAAS,OAAK;AAChD,sBAAS,QAAT,cAAS,SAAA,SAAT,UAAW,UAAU,OAAO,gBAAgB;AAG5C,qBAAQ,QAAR,aAAQ,SAAA,SAAR,SAAU,UAAU,OAAO,eAAe;OAE3C;;AAGH,QAAI,KAAK,YAAY,SAAS;AAC5B,oBAAS,QAAT,cAAS,SAAA,SAAT,UAAW,UAAU,IAAI,OAAO;AAChC,oBAAS,QAAT,cAAS,SAAA,SAAT,UAAW,UAAU,OAAO,gBAAgB;AAC5C,mBAAQ,QAAR,aAAQ,SAAA,SAAR,SAAU,UAAU,IAAI,OAAO;AAC/B,mBAAQ,QAAR,aAAQ,SAAA,SAAR,SAAU,UAAU,OAAO,eAAe;;;;AAKhD,OAAO,eAAe,OAAO,aAAa,QAAQ;",
  "names": ["style"]
}
